# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
 
name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master
    - name: Set up JDK 8
      uses: actions/setup-java@master
      with:
        java-version: '8'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: mvn clean package --file pom.xml
    - name: BuildDockerImage
      run: |
          docker login --username=${{ secrets.YUN_USERNAME }} --password ${{ secrets.YUN_PASSWORD }} registry.cn-hangzhou.aliyuncs.com
          docker build . -t wechart:$GITHUB_RUN_NUMBER
          docker push wechart:$GITHUB_RUN_NUMBER
          docker tag $(docker images wechart:$GITHUB_RUN_NUMBER -q) wechart:latest
          docker push wechart:latest
  pull-docker:
    needs: [build]
    name: PullDocker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            docker stop $(docker ps -a | grep -w wechart| awk '{print $1}')
            docker rm -f $(docker ps -a | grep -w wechart| awk '{print $1}')
            docker rmi -f $(docker images  wechart:latest -q)
            docker login --username=${{ secrets.YUN_USERNAME }} --password ${{ secrets.YUN_PASSWORD }} registry.cn-hangzhou.aliyuncs.com
            docker pull wechart
            docker run -d -p 8080:8080 wechart:latest
